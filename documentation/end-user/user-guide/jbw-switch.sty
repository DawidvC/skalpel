%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% Copyright 2010 Heriot Watt University
%%
%% This file is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.
%%
%% This file is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%%
%% You should have received a copy of the GNU General Public License
%% along with Skalpel.  If not, see <http://www.gnu.org/licenses/>.
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Usage:
%
%   \DeclareSwitch{XXX}
%
% If \ifXXX is undefined, this is equivalent to:
%
%   \newif\ifXXX
%   \XXXfalse
%
% Otherwise it does nothing.

% This file may be loaded many times.  On the first time, we want to
% use \newcommand.  On subsequent occasions, we want to use
% \CheckCommand.

\@ifundefined{DeclareSwitch}{\newcommand}{\CheckCommand}
  {\DeclareSwitch}[1]
  {\@ifundefined{if#1}%
    {% First, allocate the new boolean switch.
     \expandafter\newif\csname if#1\endcsname
     % Then initialize it to false.
     \csname #1false\endcsname}%
    {% We should check here that it is a proper boolean, but that is difficult.
    }%
   \message{(if#1=if\csname if#1\endcsname true\else false\fi)}}
