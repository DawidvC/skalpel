\input texinfo   @c -*-texinfo-*-
@c ##############################################################
@c ##############################################################
@c ##
@c ##Copyright 2010 Steven Shiells
@c ##Copyright 2011 John Pirie
@c ##Copyright 2013 Heriot-Watt University
@c ##
@c ## Skalpel is free software: you can redistribute it and/or modify
@c ## it under the terms of the GNU General Public License as published by
@c ## the Free Software Foundation, either version 3 of the License, or
@c ## (at your option) any later version.
@c ##
@c ## Skalpel is distributed in the hope that it will be useful,
@c ## but WITHOUT ANY WARRANTY; without even the implied warranty of
@c ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c ## GNU General Public License for more details.
@c ##
@c ## You should have received a copy of the GNU General Public License
@c ## along with skalpel-emacs.  If not, see <http://www.gnu.org/licenses/>.
@c ##
@c ## Authors: Steven Shiells
@c ##          John Pirie
@c ## Date: January 2010
@c ##       September 2011
@c ##
@c ###############################################################
@c ###############################################################
@c %**start of header
@setfilename Skalpel.info
@settitle Using a Type Error Slicer for SML in Emacs
@c %**end of header

@copying
This manual is for skalpel-emacs, version 0.1.

Copyright @copyright{} 2010 Steven Shiells.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
copy of the license is included in the section entitled "GNU Free
Documentation License".
@end quotation
@end copying

@ifinfo
@insertcopying
@end ifinfo

@titlepage
@sp 10
@center @titlefont{Using a Type Error Slicer in Emacs}
@sp 2
@c subtitle subtitle-if-any
@author Steven Shiells

@c  The following two commands
@c  start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage
@c @iftex
@c @c So the toc is printed at the start.
@c @contents
@c @end iftex

@dircategory Emacs
@direntry
* Skalpel: (Skalpel).                 A Type Error Slicer for SML
@end direntry

@ifnottex
@node   Top , Description, (dir), (dir)
@c This manual is for skalpel-emacs, version 0.1.
@end ifnottex

@menu
* Description::
* Usage::
@end menu

@node Description, Usage, Top, Top

@chapter Description

skalpel - a type error slicer for Standard ML

@noindent Skalpel  is  a  type error slicer for SML, developed by the ULTRA group of Heriot-Watt University, Edinburgh.

@noindent Traditional type error messages given for SML can be  hard  to  decipher  and  often  indicate
incomplete and unprecise locations as the source of the programming error.  The error messages
produced are also biased because they report only one location which is dependent on  the  way
which the abstract syntax tree is traversed.

@noindent Skalpel  aims  to  eliminate  these  problems.   The error messages produced by the type error
slicer offer textual explanations of the errors and highlights  all  and  only  those  program
points which contribute to the error.

@noindent Authors are as follows:

@noindent Joe Wells  <jbw [at] macs.hw.ac.uk>

@noindent Vincent Rahli <rahli [at] macs.hw.ac.uk>

@noindent John Pirie <jp95 [at] macs.hw.ac.uk>

@noindent Scott Fotheringham <sf47 [at] macs.hw.ac.uk>

@noindent Mark Wyper <mw105 [at] macs.hw.ac.uk>

@noindent Steven Shiells <ss215 [at] macs.hw.ac.uk>

@noindent David Dunsmore <dd35 [at] macs.hw.ac.uk>

@node Usage, (end), Description, Top

@chapter Usage

Command line usage is given below. Fore more information, please see the
user manual.

@noindent skalpel [OPTION]... [FILE]

OPTIONS

       -l <file> place output in <file> in lisp format

       -h <file> place output in <file> in HTML format

       -s <file> place output in <file> in SML format

       -j <file> place output in <file> in JSON format

       -x <file> place output in <file> in XML format

       -p <file> place output in <file> in perl format

       -t <timelimet> specify a numerical time limit

       -x <true/false> suppress exception handling (dev mode)

       -c <directory> Run analysis engine on tests in <directory>

       -e <0 | 1> toggles echo of slice display in terminal (0=no, 1=yes)

       -b  <0 | 1 | 2 <file> > Set basis level as 0 (no basis), 1 (built in basis), 2 <file> (specify
       file as basis)

       -d PARSING   shows debugging output during parsing various files

       -bo <0 | 1> If set to 1, hides basis slice in overloading errors

       -tab <tabwidth> define the tab width in user code regions

       -sol <solution> define solution to use (default 9)

       -min <true/false> if true, shows non-minimal errors

       --print-env <true/false> whether to print the environment

       --show-legend Shows the legend for notation and colour of slice display in the terminal

       --search-space <1,2,3> Use search space 1 (lists), 2 (sets), or 3 (red black tree)

       --help Show this help text


