{
"errors"       : [{"identifier"  : 0,
                   "labels"      : {"count": 1, "labelNumbers": [6] },
                   "kind"        : {"errorKindName": "ErrorKind.Parsing", "parsingStr": "sorry, 'sharing' has not been fully implemented yet"},
                   "time"        : ~1,
                   "slice"       : "⟨..⟨..⟩ sharing type ⟨..⟩..⟩",
                   "assumptions" : [],
                   "regions"     : [{"fileName": "/u1/pg/rahli/work/steven/tes/implementation/database/code510.sml", "regionList": [{"nodeType": "leaf", "fromLine": 2, "fromColumn": 33, "toLine": 2, "toColumn": 39, "color": "Y", "weight": 1},{"nodeType": "leaf", "fromLine": 2, "fromColumn": 41, "toLine": 2, "toColumn": 44, "color": "Y", "weight": 1}]}]},
                  {"identifier"  : 1,
                               "labels"      : {"count": 27, "labelNumbers": [2, 3, 4, 5, 6, 7, 9, 11, 13, 16, 17, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 35, 37, 38, 39] },
                               "kind"        : {"errorKindName": "ErrorKind.TyConsClash", "errorKindInfo": {"tnerrLabel1": 32, "tnerrTyname1": 6, "tnerrLabel2": 39, "tnerrTyname2": 3}},
                               "time"        : 36,
                               "slice"       : "⟨..signature ⟨..s = sig ⟨..⟨..type ⟨..⟩ t..type ⟨..⟩ u..⟩ sharing type t = u..⟩ end..⟩..structure ⟨..⟨..⟩ :> s = struct ⟨..type ⟨..⟨..⟩ t = ⟨..⟩ bool..⟩..type ⟨..⟨..⟩ u = ⟨..⟩ int..⟩..⟩ end..⟩;..⟩",
                               "assumptions" : [],
                               "regions"     : [{"fileName": "/u1/pg/rahli/work/steven/tes/implementation/database/code510.sml", "regionList": [{"nodeType": "leaf", "fromLine": 2, "fromColumn": 1, "toLine": 2, "toColumn": 9, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 2, "fromColumn": 11, "toLine": 2, "toColumn": 17, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 2, "fromColumn": 19, "toLine": 2, "toColumn": 24, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 2, "fromColumn": 26, "toLine": 2, "toColumn": 31, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 2, "fromColumn": 33, "toLine": 2, "toColumn": 39, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 2, "fromColumn": 41, "toLine": 2, "toColumn": 44, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 2, "fromColumn": 46, "toLine": 2, "toColumn": 46, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 2, "fromColumn": 50, "toLine": 2, "toColumn": 50, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 2, "fromColumn": 52, "toLine": 2, "toColumn": 54, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 3, "fromColumn": 1, "toLine": 3, "toColumn": 9, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 3, "fromColumn": 13, "toLine": 3, "toColumn": 25, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 3, "fromColumn": 27, "toLine": 3, "toColumn": 35, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 3, "fromColumn": 36, "toLine": 3, "toColumn": 39, "color": "B", "weight": 1},{"nodeType": "leaf", "fromLine": 3, "fromColumn": 41, "toLine": 3, "toColumn": 49, "color": "R", "weight": 1},{"nodeType": "leaf", "fromLine": 3, "fromColumn": 50, "toLine": 3, "toColumn": 52, "color": "P", "weight": 1},{"nodeType": "leaf", "fromLine": 3, "fromColumn": 54, "toLine": 3, "toColumn": 56, "color": "R", "weight": 1}]}]}],
"time"         : {"analysis": 1, "enumeration": 58, "minimisation": 58, "slicing": 58, "html": 58},
"tyvar"        : {"tyvar": 313, "assoc": [{"id": 1, "str": "s"},{"id": 2, "str": "t"},{"id": 3, "str": "u"},{"id": 4, "str": "S"},{"id": 5, "str": "bool"},{"id": 6, "str": "int"}]},
"ident"        : [{"id": 1, "str": "s"},{"id": 2, "str": "t"},{"id": 3, "str": "u"},{"id": 4, "str": "S"},{"id": 5, "str": "bool"},{"id": 6, "str": "int"}],
"constraint"   : {"total": 38, "top": 37, "syntactic": 1},
"labels"       : 39,
"minimisation" : false,
"solution"     : 9,
"basis"        : 1,
"timelimit"    : 5000,
"labelling"    : "",
"final"        : true,
"name"         : "Simple sharing"
}